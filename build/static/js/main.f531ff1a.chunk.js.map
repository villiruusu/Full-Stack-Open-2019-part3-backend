{"version":3,"sources":["components/PersonForm.js","components/Persons.js","components/Filter.js","components/Notification.js","services/persons.js","App.js","index.js"],"names":["PersonForm","addNumber","newName","handleNameAdding","newNumber","handleNumberAdding","onSubmit","value","onChange","type","Persons","persons","newFilter","deletePerson","newFilterLowerCase","toLowerCase","filter","person","name","includes","map","key","number","onClick","Filter","filterNames","Notification","message","className","axios","get","then","response","data","newPerson","post","id","delete","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","setMessage","setClassName","useEffect","phonebookService","allNumbers","event","preventDefault","target","some","window","alert","addedPerson","concat","setTimeout","confirm","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f531ff1a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst PersonForm = ({addNumber, newName, handleNameAdding, newNumber, handleNumberAdding}) =>  {\r\n  return (\r\n    <form onSubmit={addNumber}>\r\n      <div>\r\n        name:\r\n        <input\r\n          value={newName}\r\n          onChange={handleNameAdding}\r\n        />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input\r\n          value={newNumber}\r\n          onChange={handleNumberAdding}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n\r\n}\r\n\r\nexport default PersonForm\r\n","import React from 'react'\r\n\r\n/*  Mapataan persons-taulukko läpi ja tulostetaan tietueet näkyville\r\n      Laitettu unque keyksi puhelinnumero, sillä samannimisiä voi olla monia */\r\n  const Persons = ({ persons, newFilter, deletePerson }) => {\r\n      // muutetaan käyttäjän syöttämä hakusana sisältämään pelkkiä pieniä kirjaimia\r\n      let newFilterLowerCase = newFilter.toLowerCase()\r\n\r\n      /* luodaan uusi apu-taulukko, jossa ensin käydään läpi jokainen tietue ja muutetaan\r\n         sisältämään vain pieniä kirjaimia, ja palautetaan ne tietueet, jotka sisältävät\r\n         newFilter-muuttujan sisältämän tekstinpätkän\r\n\r\n         Yritin myös saada puhelinnumerohakua, mutta se jäi nyt toistaiseksi kesken.\r\n         Tämän varmaan voisi tehdä if-lauseilla ja regex-säännöillä?? */\r\n      let newFilterArray = persons.filter((person) => {\r\n        let personToLowerCase = person.name.toLowerCase()\r\n        // let noHyphens = person.number.replace(/-/g,\"\") -- numeroista väliviivat pois\r\n        return (\r\n          personToLowerCase.includes(newFilterLowerCase)\r\n          // noHyphens.includes(newFilterLowerCase) -- jätetään hautumaan :D\r\n        )\r\n      })\r\n      return newFilterArray.map(person =>\r\n        <div key={person.number}>{person.name} {person.number}\r\n        <button onClick={() => deletePerson(person)}>Delete</button>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default Persons\r\n","import React from 'react'\r\n\r\nconst Filter = ({newFilter, filterNames}) => {\r\n  return (\r\n    <form>\r\n    Filter with: \r\n      <input\r\n        value={newFilter}\r\n        onChange={filterNames}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Filter\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message, className }) => {\r\n  if (message === null) {\r\n    return null\r\n  }\r\n\r\n// Palautetaan viestipalkki sovellukseen, classNamen mukaan muodostuu eri värinen palkki riippuen onko delete vai add\r\n    return (\r\n      <div className={className}>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification\r\n","import axios from 'axios'\r\n//const baseUrl = 'http://localhost:3001/api/persons'\r\nconst baseUrl = '/api/persons/'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst addPerson = newPerson => {\r\n  const request = axios.post(baseUrl, newPerson)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, addPerson, deletePerson }\r\n","import React, { useState, useEffect } from 'react'\r\nimport PersonForm from './components/PersonForm.js'\r\nimport Persons from './components/Persons.js'\r\nimport Filter from './components/Filter.js'\r\nimport Notification from './components/Notification.js'\r\nimport phonebookService from './services/persons'\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([])\r\n  const [newName, setNewName] = useState('')\r\n  const [newNumber, setNewNumber] = useState('')\r\n  const [newFilter, setNewFilter] = useState('')\r\n  const [message, setMessage] = useState(null)\r\n  const [className, setClassName] = useState('')\r\n\r\n  /* Käyttäjän syöttämä nimi on newName-muuttujassa, joka syötetään addNumber-metodin\r\n     avulla persons-taulukkoon, jonka jälkeen newName-tietueen arvo nollataan */\r\n  const addNumber = (event) => {\r\n    // console.log(\"sisällä addNumberissa ollaan\")\r\n    event.preventDefault()\r\n        const newPerson = {\r\n          name: newName,\r\n          number: newNumber\r\n        }\r\n        // Testataan, onko nimi tai numero jo lisätty, ja lisätään vain jos se on uusi tietue\r\n        if (persons.some(person => person.name === newName)) {\r\n            window.alert(`${newName} is already added to phonebook`)\r\n        } else if (persons.some(person => person.number === newNumber)) {\r\n          window.alert(`${newNumber} is already added to phonebook`)\r\n        } else {\r\n            const messageClass = \"add\" // tallennetaan muuttujaan haluttu className, tässä tapauksessa \"add\"\r\n            phonebookService\r\n              .addPerson(newPerson)\r\n              .then(addedPerson => {\r\n                setPersons(persons.concat(addedPerson))\r\n                setMessage(`${addedPerson.name} was added to phonebook`) // Asetetaan messageksi kyseinen viesti\r\n                setClassName(messageClass) // asetetaan classNameksi aiemmin muuttujaan tallennettu \"add\"\r\n                setTimeout(() => { // Viesti näkyy ikkunassa 5 sekuntia ja sen jälkeen tyhjenee, samoin classname-kenttä tyhjenee\r\n                  setMessage(null)\r\n                  setClassName('')\r\n                }, 5000)\r\n                setNewName('')\r\n                setNewNumber('')\r\n              })\r\n\r\n          }\r\n  }\r\n\r\n  // Haetaan json-data ja asetetaan se persons-taulukkoon\r\n  useEffect(() => {\r\n    // console.log(\"Hiphei\")\r\n    phonebookService\r\n      .getAll()\r\n      .then(allNumbers => {\r\n        setPersons(allNumbers)\r\n      })\r\n  }, [])\r\n\r\n\r\n  // Tallennetaan käyttäjän syöttämä nimi newName-muuttujaan talteen\r\n  const handleNameAdding = (event) => {\r\n    setNewName(event.target.value)\r\n  }\r\n\r\n  // Tallennetaan käyttäjän syöttämä puhelinnumero newNumber-muuttujaan talteen\r\n  const handleNumberAdding = (event) => {\r\n    setNewNumber(event.target.value)\r\n  }\r\n\r\n  // Tallennetaan käyttäjän syöttämä filtteri muuttujaan talteen käsittelyä varten\r\n  const filterNames = (event) => {\r\n    event.preventDefault()\r\n    setNewFilter(event.target.value)\r\n  }\r\n\r\n  const deletePerson = (person) => {\r\n    //console.log(\"inside deletePerson\")\r\n    if (window.confirm(`Delete ${person.name} ?`)) {\r\n      const messageClass = \"delete\" // tallennetaan muuttujaan haluttu className, tässä tapauksessa \"delete\"\r\n      phonebookService\r\n      .deletePerson(person.id)\r\n        .then(response => {\r\n          setPersons(persons.filter(item => item.id !== person.id ))\r\n          setMessage(`${person.name} was deleted from phonebook`) // Muodostetaan näytettävä viesti, henkilö poistettu tietokannasta\r\n          setClassName(messageClass) // Määritetään classNameksi aiemmin muuttujaan tallennettu \"delete\"\r\n          setTimeout(() => { // Viesti näkyy ikkunassa 5 sekuntia ja sen jälkeen tyhjenee, samoin classname-kenttä tyhjenee\r\n            setMessage(null)\r\n            setClassName('')\r\n          }, 5000)\r\n        })\r\n      }\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n\r\n      <Notification\r\n        message={message}\r\n        className={className}\r\n      />\r\n\r\n      <h2>Filter numbers</h2>\r\n      <Filter\r\n        newFilter={newFilter}\r\n        filterNames={filterNames}\r\n      />\r\n      <h2>Add a new contact</h2>\r\n      <PersonForm\r\n        addNumber={addNumber}\r\n        newName={newName}\r\n        handleNameAdding={handleNameAdding}\r\n        newNumber={newNumber}\r\n        handleNumberAdding={handleNumberAdding}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Persons\r\n        persons={persons}\r\n        newFilter={newFilter}\r\n        deletePerson={deletePerson}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}